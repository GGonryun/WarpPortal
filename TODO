# User Stories

[] A user cannot gain access to a node that they do not own.
[] A user cannot gain access to a node that is not in our inventory.

# Abstractions

User access is controlled by inventory, directory, and the policy engine.

## Inventory

The inventory shows all servers that are registered with the system.

[] Servers have attributes (key value pairs)

[] Servers can import metadata from external systems.

## Directory

The directory shows all users that are registered with the system.

[] Users have attributes (key value pairs)

[] Users can import attributes from external systems.

## Policy Engine

[] The policy engine determines if a user can access a node.

# Extra TODO

[x] figure out how to get the ns server to communicate with an external server.
[] create a mock User Directory API.
[] create a custom ns node server on the machine that interacts with the User Directory API.

[] figure out how to get PAM scripts to run so that we can add the user to the `/etc/passwd` file using PAM.
[] lock down user sudo access.

[] automate the certificate generation process with an API endpoint.
[] Management CLI: prepare a machine for WarpPortal.
[] Client CLI: log a user in, intercept ssh-agent requests, request signed certificates, resolve server access.
[] create a mock policy engine
